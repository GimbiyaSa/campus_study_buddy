name: Deploy to Azure

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write
  id-token: write

env:
  NODE_VERSION: 20

jobs:
  deploy-backend:
    name: Deploy Backend Container App
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Container App
        uses: Azure/container-apps-deploy-action@v2
        with:
          acrName: ${{ secrets.AZURE_ACR_NAME }}
          resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
          containerAppName: ${{ secrets.AZURE_CONTAINER_APP_NAME }}
          imageToBuild: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/campus-study-buddy-api:${{ github.sha }}
          targetPort: 5000
          appSourcePath: backend

      - name: Ensure Container App environments are set
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az containerapp update \
              --name "${{ secrets.AZURE_CONTAINER_APP_NAME }}" \
              --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
              --set PORT=5000 \
              --set GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
              --set KEY_VAULT_NAME="${{ secrets.KEY_VAULT_NAME }}" \
              --set AZURE_CLIENT_ID="${{ secrets.AZURE_CLIENT_ID }}" \
              --set AZURE_CLIENT_SECRET="${{ secrets.AZURE_CLIENT_SECRET }}" \
              --set AZURE_TENANT_ID="${{ secrets.AZURE_TENANT_ID }}"

  deploy-frontend:
    name: Deploy Frontend Web App
    runs-on: ubuntu-latest
    needs: deploy-backend
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      - name: Archive build output
        working-directory: frontend/dist
        run: zip -r ../../frontend.zip .

      - name: Log in to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Configure App Service for static hosting
        uses: azure/CLI@v1
        with:
          inlineScript: |
            WEBAPP_OS=$(az webapp show \
              --name "${{ secrets.AZURE_WEBAPP_NAME }}" \
              --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
              --query "reserved" -o tsv)

            if [ "$WEBAPP_OS" = "true" ]; then
              echo "Configuring Linux startup command for static SPA"
              az webapp config set \
                --name "${{ secrets.AZURE_WEBAPP_NAME }}" \
                --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
                --startup-file "pm2 serve /home/site/wwwroot 5173 --spa --no-daemon"
              az webapp config appsettings set \
                --name "${{ secrets.AZURE_WEBAPP_NAME }}" \
                --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
                --settings PORT=5173 WEBSITES_PORT=5173 WEBSITES_ENABLE_APP_SERVICE_STORAGE=true
              az webapp config appsettings delete \
                --name "${{ secrets.AZURE_WEBAPP_NAME }}" \
                --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
                --setting-names WEBSITE_RUN_FROM_PACKAGE || true
            else
              echo "App Service is not Linux-based; skipping startup command configuration"
              az webapp config appsettings set \
                --name "${{ secrets.AZURE_WEBAPP_NAME }}" \
                --resource-group "${{ secrets.AZURE_RESOURCE_GROUP }}" \
                --settings WEBSITE_RUN_FROM_PACKAGE=1
            fi


      - name: Deploy to App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          package: frontend.zip
