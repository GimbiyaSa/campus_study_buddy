{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the internal documentation for Campus Study Buddy.</p>"},{"location":"#this-wiki-covers","title":"This wiki covers:","text":"<ul> <li>What the app does and how it's organized</li> <li>Frontend (React + TypeScript)</li> <li>Backend (Node.js + Express + TypeScript)</li> <li>API Testing &amp; Authentication - Interactive tools for testing endpoints</li> <li>Architecture and design decisions</li> <li>Infrastructure (GitHub Actions, Pages; Azure services)</li> <li>Design system and accessibility</li> <li>Operations &amp; runbooks</li> </ul> <p>Repo: https://github.com/GimbiyaSa/campus_study_buddy Buddy</p>"},{"location":"user-feedback-questionnaire/","title":"\ud83d\udccb User Experience Feedback Questionnaire","text":"<p>This questionnaire is designed to capture user feedback on the Campus Study Buddy site. Please fill in your responses honestly \u2014 your feedback will help us improve the platform.</p> <p>Loading\u2026 </p> <p>If the form doesn\u2019t load, open it in a new tab.</p> <p>Form with responses: .</p>"},{"location":"architecture/","title":"Architecture","text":"<ul> <li>SPA (React) served by Vite dev server locally</li> <li>Node/Express API</li> <li>Azure services for data and realtime</li> <li>Docs hosted on GitHub Pages (MkDocs Material)</li> </ul>"},{"location":"architecture/#build-release","title":"Build &amp; Release","text":"<ul> <li>GitHub Actions build docs \u2192 Pages</li> <li>App CI/CD to be defined (frontend/backend)</li> </ul>"},{"location":"architecture/diagrams/","title":"Diagrams","text":""},{"location":"backend/","title":"Backend Overview","text":"<ul> <li>Runtime: Node.js</li> <li>Framework: Express</li> <li>Language: TypeScript</li> <li>Endpoints: health check, users CRUD (sample)</li> </ul>"},{"location":"backend/#dev","title":"Dev","text":"<pre><code>cd backend\nnpm i\nnpm run dev\n</code></pre>"},{"location":"backend/#additional-documentation","title":"Additional documentation","text":"<ul> <li>Dependencies \u2014 explains the purpose of each runtime and development library referenced in <code>package.json</code>.</li> <li>API surface \u2014 endpoint catalogue and examples.</li> <li>Data models \u2014 schemas and relations handled by the service.</li> <li>Services \u2014 internal service modules and responsibilities.</li> <li>Swagger \u2014 documentation generation details.</li> </ul>"},{"location":"backend/api/","title":"API","text":""},{"location":"backend/api/#health-check","title":"Health Check","text":"Method Endpoint Description GET <code>/api/v1/health</code> Check application and Azure services health"},{"location":"backend/api/#user-service-apiv1users","title":"User Service (<code>/api/v1/users</code>)","text":"Method Endpoint Description GET <code>/me</code> Get current user profile PUT <code>/me</code> Update current user profile GET <code>/</code> Get all users GET <code>/me/modules</code> Get user's enrolled modules POST <code>/me/modules/:moduleId/enroll</code> Enroll in a module GET <code>/me/progress</code> Get user's progress PUT <code>/me/progress</code> Update user's progress GET <code>/me/study-hours</code> Get user's study hours POST <code>/me/study-hours</code> Log study hours GET <code>/me/statistics</code> Get user statistics GET <code>/me/notifications</code> Get user notifications PUT <code>/me/notifications/:notificationId/read</code> Mark notification as read POST <code>/files/upload</code> Upload files"},{"location":"backend/api/#partner-service-apiv1partners","title":"Partner Service (<code>/api/v1/partners</code>)","text":"Method Endpoint Description GET <code>/</code> Get study partners GET <code>/search</code> Search for study partners POST <code>/request</code> Send partner request POST <code>/test-users</code> Create test users (development)"},{"location":"backend/api/#group-service-apiv1groups","title":"Group Service (<code>/api/v1/groups</code>)","text":"Method Endpoint Description POST <code>/</code> Create a new study group GET <code>/</code> Get all study groups GET <code>/my-groups</code> Get user's study groups POST <code>/:groupId/join</code> Join a study group POST <code>/:groupId/leave</code> Leave a study group POST <code>/:groupId/invite</code> Invite users to a group POST <code>/:groupId/sessions</code> Create a session for a group"},{"location":"backend/api/#progress-service-apiv1progress","title":"Progress Service (<code>/api/v1/progress</code>)","text":"Method Endpoint Description POST <code>/sessions</code> Log a study session GET <code>/analytics</code> Get progress analytics GET <code>/modules/:moduleId</code> Get progress for a specific module PUT <code>/topics/:topicId/complete</code> Mark a topic as complete GET <code>/leaderboard</code> Get progress leaderboard GET <code>/goals</code> Get user goals"},{"location":"backend/api/#chat-service-apiv1chat","title":"Chat Service (<code>/api/v1/chat</code>)","text":"Method Endpoint Description POST <code>/negotiate</code> Negotiate WebSocket connection for real-time chat POST <code>/groups/:groupId/messages</code> Send a message to a group GET <code>/groups/:groupId/messages</code> Get messages from a group"},{"location":"backend/api/#course-service-apiv1courses","title":"Course Service (<code>/api/v1/courses</code>)","text":"Method Endpoint Description GET <code>/</code> Get all courses POST <code>/</code> Create a new course PUT <code>/:id</code> Update a course DELETE <code>/:id</code> Delete a course GET <code>/test-search</code> Test search functionality (development) GET <code>/debug</code> Debug endpoint for courses GET <code>/available</code> Get available courses GET <code>/:id/topics</code> Get topics for a specific course"},{"location":"backend/api/#module-service-apiv1modules","title":"Module Service (<code>/api/v1/modules</code>)","text":"Method Endpoint Description GET <code>/</code> Get all modules GET <code>/:moduleId</code> Get a specific module GET <code>/:moduleId/topics</code> Get topics for a module GET <code>/topics/:topicId/chapters</code> Get chapters for a topic POST <code>/</code> Create a new module POST <code>/:moduleId/topics</code> Create a topic for a module POST <code>/topics/:topicId/chapters</code> Create a chapter for a topic PUT <code>/:moduleId</code> Update a module DELETE <code>/:moduleId</code> Delete a module"},{"location":"backend/api/#session-service-apiv1sessions","title":"Session Service (<code>/api/v1/sessions</code>)","text":"Method Endpoint Description GET <code>/</code> Get all study sessions GET <code>/:sessionId</code> Get a specific session POST <code>/</code> Create a new study session POST <code>/:sessionId/join</code> Join a study session DELETE <code>/:sessionId/leave</code> Leave a study session PUT <code>/:sessionId</code> Update a session PUT <code>/:sessionId/start</code> Start a session PUT <code>/:sessionId/end</code> End a session PUT <code>/:sessionId/cancel</code> Cancel a session DELETE <code>/:sessionId</code> Delete a session"},{"location":"backend/api/#notification-service-apiv1notifications","title":"Notification Service (<code>/api/v1/notifications</code>)","text":"Method Endpoint Description GET <code>/</code> Get user notifications GET <code>/counts</code> Get notification counts PUT <code>/:notificationId/read</code> Mark a notification as read PUT <code>/read-all</code> Mark all notifications as read DELETE <code>/:notificationId</code> Delete a notification POST <code>/</code> Create a new notification POST <code>/group/:groupId/notify</code> Send notification to group members GET <code>/pending</code> Get pending notifications PUT <code>/mark-sent</code> Mark notifications as sent <p>API Documentation: - \ud83d\ude80 Interactive Swagger UI - \ud83d\udcc4 Raw API Specification - \ud83c\udfe0 Documentation Hub</p>"},{"location":"backend/data-models/","title":"Data Models","text":""},{"location":"backend/data-models/#erd","title":"ERD","text":"<p>```</p> <p>enrolls_in</p><p>has_enrolled</p><p>contains</p><p>has</p><p>creates</p><p>focuses_on</p><p>has</p><p>joins</p><p>hosts</p><p>organizes</p><p>includes</p><p>attends</p><p>tracks</p><p>measured_by</p><p>includes</p><p>logs</p><p>categorizes</p><p>relates_to</p><p>generates</p><p>receives</p><p>has</p><p>contains</p><p>sends</p><p>requests</p><p>matched_with</p><p>based_on</p><p>contains</p><p>authors</p><p>covers</p><p>USERS</p><p>int</p><p>user_id</p><p>PK</p><p>string</p><p>email</p><p>UK</p><p>string</p><p>password_hash</p><p>string</p><p>first_name</p><p>string</p><p>last_name</p><p>string</p><p>university</p><p>string</p><p>course</p><p>int</p><p>year_of_study</p><p>text</p><p>bio</p><p>string</p><p>profile_image_url</p><p>json</p><p>study_preferences</p><p>boolean</p><p>is_active</p><p>datetime</p><p>created_at</p><p>datetime</p><p>updated_at</p><p>MODULES</p><p>int</p><p>module_id</p><p>PK</p><p>string</p><p>module_code</p><p>UK</p><p>string</p><p>module_name</p><p>string</p><p>description</p><p>string</p><p>university</p><p>boolean</p><p>is_active</p><p>datetime</p><p>created_at</p><p>USER_MODULES</p><p>int</p><p>user_module_id</p><p>PK</p><p>int</p><p>user_id</p><p>FK</p><p>int</p><p>module_id</p><p>FK</p><p>string</p><p>enrollment_status</p><p>datetime</p><p>enrolled_at</p><p>TOPICS</p><p>int</p><p>topic_id</p><p>PK</p><p>int</p><p>module_id</p><p>FK</p><p>string</p><p>topic_name</p><p>string</p><p>description</p><p>int</p><p>order_sequence</p><p>boolean</p><p>is_active</p><p>datetime</p><p>created_at</p><p>CHAPTERS</p><p>int</p><p>chapter_id</p><p>PK</p><p>int</p><p>topic_id</p><p>FK</p><p>string</p><p>chapter_name</p><p>string</p><p>description</p><p>int</p><p>order_sequence</p><p>text</p><p>content_summary</p><p>boolean</p><p>is_active</p><p>datetime</p><p>created_at</p><p>STUDY_GROUPS</p><p>int</p><p>group_id</p><p>PK</p><p>string</p><p>group_name</p><p>text</p><p>description</p><p>int</p><p>creator_id</p><p>FK</p><p>int</p><p>module_id</p><p>FK</p><p>int</p><p>max_members</p><p>string</p><p>group_type</p><p>json</p><p>group_goals</p><p>boolean</p><p>is_active</p><p>datetime</p><p>created_at</p><p>datetime</p><p>updated_at</p><p>GROUP_MEMBERS</p><p>int</p><p>membership_id</p><p>PK</p><p>int</p><p>group_id</p><p>FK</p><p>int</p><p>user_id</p><p>FK</p><p>string</p><p>role</p><p>string</p><p>status</p><p>datetime</p><p>joined_at</p><p>datetime</p><p>updated_at</p><p>STUDY_SESSIONS</p><p>int</p><p>session_id</p><p>PK</p><p>int</p><p>group_id</p><p>FK</p><p>int</p><p>organizer_id</p><p>FK</p><p>string</p><p>session_title</p><p>text</p><p>description</p><p>datetime</p><p>scheduled_start</p><p>datetime</p><p>scheduled_end</p><p>datetime</p><p>actual_start</p><p>datetime</p><p>actual_end</p><p>string</p><p>location</p><p>string</p><p>session_type</p><p>string</p><p>status</p><p>datetime</p><p>created_at</p><p>datetime</p><p>updated_at</p><p>SESSION_ATTENDEES</p><p>int</p><p>attendance_id</p><p>PK</p><p>int</p><p>session_id</p><p>FK</p><p>int</p><p>user_id</p><p>FK</p><p>string</p><p>attendance_status</p><p>datetime</p><p>responded_at</p><p>text</p><p>notes</p><p>USER_PROGRESS</p><p>int</p><p>progress_id</p><p>PK</p><p>int</p><p>user_id</p><p>FK</p><p>int</p><p>topic_id</p><p>FK</p><p>int</p><p>chapter_id</p><p>FK</p><p>string</p><p>completion_status</p><p>decimal</p><p>hours_spent</p><p>text</p><p>notes</p><p>datetime</p><p>started_at</p><p>datetime</p><p>completed_at</p><p>datetime</p><p>updated_at</p><p>STUDY_HOURS</p><p>int</p><p>hour_id</p><p>PK</p><p>int</p><p>user_id</p><p>FK</p><p>int</p><p>module_id</p><p>FK</p><p>int</p><p>topic_id</p><p>FK</p><p>int</p><p>session_id</p><p>FK</p><p>decimal</p><p>hours_logged</p><p>text</p><p>description</p><p>datetime</p><p>study_date</p><p>datetime</p><p>logged_at</p><p>NOTIFICATIONS</p><p>int</p><p>notification_id</p><p>PK</p><p>int</p><p>user_id</p><p>FK</p><p>string</p><p>notification_type</p><p>string</p><p>title</p><p>text</p><p>message</p><p>json</p><p>metadata</p><p>boolean</p><p>is_read</p><p>datetime</p><p>scheduled_for</p><p>datetime</p><p>sent_at</p><p>datetime</p><p>created_at</p><p>CHAT_ROOMS</p><p>int</p><p>room_id</p><p>PK</p><p>int</p><p>group_id</p><p>FK</p><p>string</p><p>room_name</p><p>string</p><p>room_type</p><p>boolean</p><p>is_active</p><p>datetime</p><p>created_at</p><p>CHAT_MESSAGES</p><p>int</p><p>message_id</p><p>PK</p><p>int</p><p>room_id</p><p>FK</p><p>int</p><p>sender_id</p><p>FK</p><p>text</p><p>message_content</p><p>string</p><p>message_type</p><p>json</p><p>attachments</p><p>boolean</p><p>is_deleted</p><p>datetime</p><p>created_at</p><p>datetime</p><p>updated_at</p><p>PARTNER_MATCHES</p><p>int</p><p>match_id</p><p>PK</p><p>int</p><p>requester_id</p><p>FK</p><p>int</p><p>matched_user_id</p><p>FK</p><p>int</p><p>module_id</p><p>FK</p><p>string</p><p>match_status</p><p>decimal</p><p>compatibility_score</p><p>datetime</p><p>created_at</p><p>datetime</p><p>updated_at</p><p>SHARED_NOTES</p><p>int</p><p>note_id</p><p>PK</p><p>int</p><p>group_id</p><p>FK</p><p>int</p><p>author_id</p><p>FK</p><p>int</p><p>topic_id</p><p>FK</p><p>string</p><p>note_title</p><p>text</p><p>note_content</p><p>json</p><p>attachments</p><p>string</p><p>visibility</p><p>boolean</p><p>is_active</p><p>datetime</p><p>created_at</p><p>datetime</p><p>updated_at</p>"},{"location":"backend/dependencies/","title":"Backend Dependencies","text":"<p>This document summarizes the key libraries that power the Campus Study Buddy API. It is derived from <code>backend/package.json</code> and is intended to help new contributors understand why each package is in place and where it is typically used.</p>"},{"location":"backend/dependencies/#runtime-dependencies","title":"Runtime dependencies","text":"Library Version Purpose in the API <code>express</code> <code>^4.18.2</code> HTTP server framework that handles routing, middleware chaining, and request/response lifecycle. <code>cors</code> <code>^2.8.5</code> Enables Cross-Origin Resource Sharing so the React frontend can call the API in development and production. <code>helmet</code> <code>^7.0.0</code> Sets secure HTTP headers (HSTS, CSP, etc.) to harden the API against common web attacks. <code>express-rate-limit</code> <code>^6.10.0</code> Provides per-route throttling to protect sensitive endpoints against brute-force and abuse. <code>dotenv</code> <code>^16.6.1</code> Loads configuration from <code>.env</code> files for local development and testing. <code>mssql</code> <code>^12.0.0</code> TDS client for Microsoft SQL Server; used by the data layer to query Azure SQL/SQL Server. <code>jsonwebtoken</code> <code>^9.0.2</code> Implements JWT signing/verification for session tokens issued by the API. <code>jwks-rsa</code> <code>^3.0.1</code> Fetches JSON Web Key Sets (JWKS) so JWTs issued by Azure AD B2C or other IdPs can be validated. <code>google-auth-library</code> <code>^10.3.0</code> Verifies Google ID tokens for the Google sign-in flow before establishing sessions. <code>@azure/keyvault-secrets</code> <code>^4.10.0</code> Securely retrieves application secrets (API keys, connection strings) from Azure Key Vault. <code>@azure/identity</code> <code>^4.12.0</code> Supplies credential providers (DefaultAzureCredential, Managed Identity) for authenticating Azure SDK clients. <code>@azure/storage-blob</code> <code>^12.28.0</code> Handles blob uploads/downloads for study resources and other file attachments. <code>@azure/service-bus</code> <code>^7.9.0</code> Publishes and consumes messages for asynchronous processes (notifications, background jobs). <code>@azure/communication-email</code> <code>^1.0.0</code> Sends transactional emails (study reminders, group invites) via Azure Communication Services. <code>@azure/web-pubsub</code> <code>^1.2.0</code> Powers realtime study sessions and chat via Azure Web PubSub service."},{"location":"backend/dependencies/#development-build-tooling","title":"Development &amp; build tooling","text":"Library Version Purpose <code>typescript</code> <code>^5.9.2</code> Primary language for the backend; transpiled to JavaScript before running in Node. <code>ts-node</code> <code>^10.9.2</code> Allows TypeScript execution without precompilation for CLI utilities and scripts. <code>ts-jest</code> <code>^29.4.1</code> Integrates TypeScript with Jest so tests can run against <code>.ts</code> sources directly. <code>jest</code> <code>^29.7.0</code> Main testing framework for unit and integration suites. <code>supertest</code> <code>^6.3.3</code> Provides HTTP assertions for Express endpoints during integration tests. <code>@types/*</code> packages <code>various</code> TypeScript type definitions for runtime libraries (Express, Node, MSSQL, etc.). <code>@typescript-eslint/eslint-plugin</code> / <code>@typescript-eslint/parser</code> <code>^8.41.0</code> ESLint tooling for linting TypeScript code. <code>eslint</code> &amp; <code>eslint-config-prettier</code> &amp; <code>eslint-plugin-prettier</code> <code>^8.46.0</code>, <code>^9.0.0</code>, <code>^4.2.1</code> Linting rules and Prettier integration to maintain consistent style. <code>prettier</code> <code>^2.8.8</code> Code formatter used by CI and local workflows. <code>nodemon</code> <code>^3.0.1</code> Restarts the Node process automatically during development. <code>rimraf</code> <code>^6.0.1</code> Cross-platform clean command used in the build script."},{"location":"backend/dependencies/#scripts-reference","title":"Scripts reference","text":"<p>These dependencies are exercised through the npm scripts declared in <code>backend/package.json</code>:</p> <ul> <li><code>npm run build</code> \u2013 compiles TypeScript to <code>dist/</code> (relies on <code>typescript</code>, <code>rimraf</code>).</li> <li><code>npm run dev</code> \u2013 runs the compiled app with <code>nodemon</code> for hot reloading.</li> <li><code>npm test</code> / <code>npm run test:ci</code> \u2013 execute Jest test suites (<code>jest</code>, <code>ts-jest</code>, <code>supertest</code>).</li> <li><code>npm run lint</code> \u2013 applies ESLint/Prettier rules.</li> <li><code>npm run format</code> \u2013 formats source files via Prettier.</li> </ul> <p>Refer back to this document whenever you introduce a new dependency to the API. Add a short description so the team understands its role and can evaluate security updates more easily.</p>"},{"location":"backend/services/","title":"Services","text":"<ul> <li>Cosmos DB: primary data store (users, notes, courses)</li> <li>Web PubSub: real-time events (chat, live updates)</li> <li>Service Bus: async workflows / background jobs</li> </ul> <p>Add service wrappers (repository pattern) and centralize config.</p>"},{"location":"backend/swagger/","title":"API Documentation","text":""},{"location":"backend/swagger/#interactive-swagger-ui","title":"Interactive Swagger UI","text":"<p>The complete API documentation is available through our interactive Swagger UI interface.</p>          \ud83d\ude80 Open Interactive API Documentation"},{"location":"backend/swagger/#alternative-access-methods","title":"Alternative Access Methods","text":"<p>If the main Swagger UI link doesn't work, try these alternatives:</p>"},{"location":"backend/swagger/#direct-links","title":"Direct Links","text":"<ul> <li>Swagger UI: https://gimbiyasa.github.io/campus_study_buddy/swagger/</li> <li>Raw API Spec: api-spec.yaml</li> </ul>"},{"location":"backend/swagger/#quick-reference","title":"Quick Reference","text":""},{"location":"backend/swagger/#base-url","title":"Base URL","text":"<pre><code>https://your-api-domain.com/api/v1\n</code></pre>"},{"location":"backend/swagger/#authentication","title":"Authentication","text":"<pre><code>Authorization: Bearer &lt;your-jwt-token&gt;\n</code></pre>"},{"location":"backend/swagger/#main-service-endpoints","title":"Main Service Endpoints","text":"Service Base Path Description Users <code>/api/v1/users</code> User management and profiles Courses <code>/api/v1/courses</code> Course and module management Groups <code>/api/v1/groups</code> Study group operations Sessions <code>/api/v1/sessions</code> Study session scheduling Partners <code>/api/v1/partners</code> Study partner matching Progress <code>/api/v1/progress</code> Progress tracking and analytics Chat <code>/api/v1/chat</code> Real-time messaging Notifications <code>/api/v1/notifications</code> User notifications"},{"location":"backend/swagger/#features","title":"Features","text":"<ul> <li>Try It Out: Test API endpoints directly from the documentation</li> <li>Request/Response Examples: See real request and response formats</li> <li>Authentication: Built-in support for JWT token authentication</li> <li>Real-time Updates: Documentation stays in sync with the API</li> </ul>"},{"location":"backend/swagger/#getting-started","title":"Getting Started","text":"<ol> <li>Obtain API Access: Contact your system administrator for API credentials</li> <li>Authentication: Use the <code>/auth/login</code> endpoint to obtain a JWT token</li> <li>Explore: Use the interactive documentation to explore available endpoints</li> <li>Test: Try out API calls directly from the Swagger interface</li> </ol> <p>Development Environment</p> <p>For development and testing, you can use the test endpoints marked with <code>(development)</code> in the API documentation.</p> <p>Rate Limiting</p> <p>Please be aware that API endpoints are rate-limited. Check the response headers for rate limit information.</p>"},{"location":"design-system/","title":"Design System","text":"<ul> <li>Clean, friendly dashboard style</li> <li>Cards with soft shadows, rounded corners</li> <li>Brand palette: greens/teals</li> </ul>"},{"location":"design-system/accessibility/","title":"Accessibility","text":"<ul> <li>Keyboard accessible nav &amp; menus</li> <li>Focus rings on interactive elements</li> <li>Color contrast \u2265 WCAG AA where possible</li> </ul>"},{"location":"design-system/tokens/","title":"Tokens (starter)","text":"<ul> <li>Color: brand-50/100/500/700</li> <li>Radius: sm, md, xl, 2xl</li> <li>Shadow: soft/card</li> <li>Spacing: 4/6/8/12/16 px scale</li> </ul>"},{"location":"frontend/","title":"Frontend Overview","text":"<ul> <li>Framework: React + TypeScript</li> <li>Build: Vite</li> <li>Styling: Tailwind + custom components</li> <li>Icons: lucide-react</li> <li>HTTP: Axios (services/api.ts)</li> </ul>"},{"location":"frontend/#local-dev","title":"Local dev","text":"<pre><code>cd frontend\nnpm i\nnpm run dev\n</code></pre>"},{"location":"frontend/#additional-documentation","title":"Additional documentation","text":"<ul> <li>Dependencies \u2014 summary of runtime and tooling libraries from <code>package.json</code>.</li> <li>Components \u2014 breakdown of key reusable UI building blocks.</li> <li>Pages \u2014 overview of major routes and page layouts.</li> <li>State management \u2014 data flow and state handling patterns.</li> </ul>"},{"location":"frontend/#frontend-documentation","title":"Frontend Documentation","text":""},{"location":"frontend/#overview","title":"Overview","text":"<p>The Campus Study Buddy frontend is built with React 18 and TypeScript, styled with TailwindCSS, and bundled with Vite for fast local development and production builds. The frontend connects to the backend via a service layer (<code>DataService</code>) that centralizes API calls.</p> <p>The design emphasizes: - Role-based dashboards (Student vs Organization views) - Reusable components (Sidebar, Header, StatsCards, BuddySearch, etc.) - Responsive layouts (mobile \u2192 desktop with Tailwind breakpoints) - Modern UI/UX principles (clean cards, accessible forms, subtle animation)  </p>"},{"location":"frontend/components/","title":"Components","text":""},{"location":"frontend/components/#key-features","title":"Key Features","text":"<ul> <li>Groups Page: create, join, and manage study groups.  </li> <li>Sessions Page: create study sessions (linked to groups), track attendance, and filter by upcoming sessions.  </li> <li>Courses Page: display enrolled courses, allow filtering/sorting.  </li> <li>Dashboard: summary cards for sessions, partners, and progress tracking.  </li> <li>Profile Page: user information, learning preferences, and settings.  </li> </ul>"},{"location":"frontend/components/#development-guidelines","title":"Development Guidelines","text":"<ul> <li>State Management: Local state via <code>useState</code>/<code>useEffect</code>; heavier flows should be centralized in service functions.  </li> <li>Routing: React Router used for navigation between pages.  </li> <li>Data Fetching: <code>DataService</code> abstracts API calls to keep components clean.  </li> <li>Error Handling: Errors caught at service level; UI should show fallback error messages.  </li> <li>Styling: Always use Tailwind utilities unless building shared class sets.  </li> </ul>"},{"location":"frontend/dependencies/","title":"Frontend Dependencies","text":"<p>This reference is generated from <code>frontend/package.json</code> and explains why each dependency exists in the Campus Study Buddy UI. Use it to evaluate updates, remove unused libraries, and onboard new contributors.</p>"},{"location":"frontend/dependencies/#runtime-dependencies","title":"Runtime dependencies","text":"Library Version Purpose in the app <code>react</code> <code>^19.1.1</code> Core UI library used to build component-based pages and handle state. <code>react-dom</code> <code>^19.1.1</code> Bridges React components to the DOM renderer and manages hydration. <code>@azure/web-pubsub-client</code> <code>^1.0.2</code> Connects to Azure Web PubSub for realtime study sessions, notifications, and live collaboration. <code>lucide-react</code> <code>^0.542.0</code> Provides the icon set used throughout the UI."},{"location":"frontend/dependencies/#development-tooling-dependencies","title":"Development &amp; tooling dependencies","text":"Library Version Purpose <code>vite</code> <code>^7.1.5</code> Lightning-fast dev server and build tool. <code>@vitejs/plugin-react</code> <code>^5.0.0</code> Enables React Fast Refresh, JSX transform, and automatic TypeScript handling in Vite. <code>typescript</code> <code>~5.8.3</code> Type system for authoring strongly typed React components. <code>tailwindcss</code> <code>^3.4.17</code> Utility-first CSS framework powering layout, spacing, and theming. <code>postcss</code> <code>^8.5.6</code> &amp; <code>autoprefixer</code> <code>^10.4.21</code> Post-processing pipeline for Tailwind + browser compatibility. <code>eslint</code>, <code>@eslint/js</code>, <code>@typescript-eslint/*</code>, <code>eslint-plugin-react</code>, <code>eslint-plugin-react-hooks</code>, <code>eslint-plugin-react-refresh</code>, <code>eslint-config-prettier</code>, <code>eslint-plugin-prettier</code>, <code>globals</code> <code>various</code> Linting stack that enforces code quality, React best practices, and Prettier formatting. <code>prettier</code> <code>^2.8.8</code> Opinionated formatter used in CI and by developers locally. <code>vitest</code> <code>^3.2.4</code> &amp; <code>@vitest/coverage-v8</code> <code>^3.2.4</code> Unit testing framework with coverage reporting. <code>@testing-library/react</code>, <code>@testing-library/user-event</code>, <code>@testing-library/jest-dom</code> <code>various</code> Testing utilities for asserting accessible UI behavior. <code>jsdom</code> <code>^26.1.0</code> Simulated DOM environment for tests executed in Node. <code>@types/react</code>, <code>@types/react-dom</code> <code>various</code> TypeScript type declarations for React runtime packages."},{"location":"frontend/dependencies/#scripts-reference","title":"Scripts reference","text":"Script Description <code>npm run dev</code> Start the Vite dev server with hot-module replacement. <code>npm run build</code> Type-check using project references (<code>tsc -b</code>) and produce an optimized Vite build. <code>npm run preview</code> Serve the production build locally for smoke testing. <code>npm run lint</code> / <code>npm run lint:fix</code> Run ESLint with TypeScript/React plugins (optionally auto-fix). <code>npm run format</code> Format the codebase using Prettier. <code>npm test</code> / <code>npm run test:watch</code> / <code>npm run test:ci</code> / <code>npm run test:coverage</code> Execute Vitest test suites interactively, in CI mode, and with coverage reporting. <p>Whenever you add or remove dependencies, update this document to keep the knowledge base accurate.</p>"},{"location":"frontend/pages/","title":"Pages &amp; Layout","text":"<p>Main areas: - Dashboard: header with dropdown, cards (study buddies, activity, calendar) - Courses: course list with progress &amp; actions - Partners: find/connect study partners - Settings</p> <p>Layout uses a sidebar and responsive top bar on mobile.</p>"},{"location":"frontend/state-management/","title":"State Management","text":"<ul> <li>Local React state for UI bits (dropdowns, active tab)</li> <li>Service layer in <code>services/api.ts</code> for server calls (Axios)</li> <li>Future:</li> <li>React Query for server cache</li> <li>Context for user/session</li> </ul>"},{"location":"infrastructure/ci-cd/","title":"CI/CD","text":""},{"location":"infrastructure/ci-cd/#docs","title":"Docs","text":"<ul> <li>Workflow builds MkDocs &amp; deploys to GitHub Pages.</li> </ul>"},{"location":"infrastructure/ci-cd/#app","title":"App","text":"<ul> <li>Lint/test \u2192 build \u2192 deploy to hosting (e.g., Azure Web Apps)</li> </ul>"},{"location":"infrastructure/ci-cd/#azure-deployment-workflow","title":"Azure Deployment Workflow","text":"<p>The <code>azure-deploy.yml</code> GitHub Actions workflow builds and deploys the backend and frontend independently:</p> <ul> <li>Backend: builds the Container App image from <code>backend/</code>, pushes it to the configured Azure Container Registry, and updates the existing Azure Container App revision.</li> <li>Frontend: builds the Vite SPA from <code>frontend/</code>, zips the static output, and deploys it to the Linux Web App provisioned by Terraform.</li> </ul>"},{"location":"infrastructure/ci-cd/#required-secrets","title":"Required secrets","text":"<p>Add the following repository or organization secrets before running the workflow:</p> Secret Description <code>AZURE_CREDENTIALS</code> Output of <code>az ad sp create-for-rbac --sdk-auth ...</code> for the deployment service principal. <code>AZURE_RESOURCE_GROUP</code> Resource group created by Terraform (e.g., <code>csb-prod-rg-eus2-xxxx</code>). <code>AZURE_CONTAINER_APP_NAME</code> Container App name (Terraform output <code>module.compute.api_container_app_name</code>). <code>AZURE_ACR_NAME</code> Azure Container Registry name used to store backend images. <code>AZURE_ACR_LOGIN_SERVER</code> Login server for the registry (e.g., <code>myregistry.azurecr.io</code>). <code>AZURE_WEBAPP_NAME</code> Linux Web App name for the frontend (Terraform output <code>module.compute.frontend_app_service_name</code>)."},{"location":"infrastructure/ci-cd/#usage","title":"Usage","text":"<ul> <li>Triggered automatically on pushes to <code>main</code> and via Run workflow (manual dispatch).</li> <li>Ensure the backend Dockerfile (<code>backend/Dockerfile</code>) stays in sync with the Node/TypeScript build.</li> <li>If you rotate registry credentials, update the ACR secret/password and re-run the workflow.</li> </ul>"},{"location":"infrastructure/environments/","title":"Environments","text":"<ul> <li>Local: <code>frontend</code> (5173), <code>backend</code> (5000)</li> <li>Cloud: Azure services (Cosmos DB, Web PubSub, Service Bus)</li> <li>Secrets: use repo/environment secrets; do not commit keys</li> </ul>"},{"location":"infrastructure/google_auth/","title":"Google Auth","text":""},{"location":"infrastructure/google_auth/#google-authentication-integration","title":"Google Authentication Integration","text":""},{"location":"infrastructure/google_auth/#high-level-flow","title":"High-level flow","text":""},{"location":"infrastructure/google_auth/#step-1-frontend-google-identity-services","title":"Step 1 \u2013 Frontend (Google Identity Services)","text":"<ul> <li><code>GOOGLE_CLIENT_ID</code> from <code>.env</code> is passed to Google Identity Services when rendering the sign-in button.</li> <li>After a user selects an account, Google returns a JWT credential (ID token) via the callback defined in <code>google.accounts.id.initialize</code>.</li> <li>The frontend stores that token (for example, <code>google_id_token</code>).</li> </ul>"},{"location":"infrastructure/google_auth/#step-2-backend-verification-apiv1authgoogle","title":"Step 2 \u2013 Backend verification (<code>/api/v1/auth/google</code>)","text":"<ul> <li>Uses the Google Auth Library\u2019s <code>OAuth2Client</code> with the same <code>GOOGLE_CLIENT_ID</code> to call <code>verifyIdToken</code>.</li> <li>Extracts the payload (Google user ID, email, names, picture).</li> <li>Checks whether the user already exists; if not, creates a new record.</li> <li>Issues an authenticated session (HTTP-only cookie plus JSON payload with the user profile) that the frontend stores in context.</li> </ul>"},{"location":"infrastructure/google_auth/#step-3-session-usage","title":"Step 3 \u2013 Session usage","text":"<ul> <li>Subsequent API calls rely on the session cookie set during login; no Google token is sent again.</li> <li>Logout (<code>POST /api/v1/auth/logout</code>) clears the session and the cached Google token on the client.</li> </ul>"},{"location":"infrastructure/google_auth/#error-handling","title":"Error handling","text":"<ul> <li>Invalid or expired Google credentials return <code>401</code> with an error message so the frontend can show a fallback.  </li> <li>Network failures fall back to the guest flow described in <code>Header.tsx</code> (showing placeholder notifications).</li> </ul>"},{"location":"infrastructure/google_auth/#local-setup-tips","title":"Local setup tips","text":"<ul> <li>Ensure <code>GOOGLE_CLIENT_ID</code> in <code>backend/.env</code> matches the OAuth client configured in Google Cloud Console.  </li> <li>For local testing over <code>http://localhost:5173</code>, add that URL as an authorized origin in the Google OAuth configuration.  </li> <li>If you rotate credentials, restart both backend and frontend so the new environment variable is picked up.</li> </ul>"},{"location":"infrastructure/google_auth/#why-google","title":"Why Google","text":"<ul> <li>User familiarity: Most students already have Google accounts, so sign-in is quicker and frictionless.</li> <li>Security posture: Google Identity Services handles MFA, password recovery, and suspicious login detection so we inherit their security investments.</li> <li>Reduced maintenance: No need to store or hash passwords, cutting operational overhead and breach risk.</li> <li>Cross-platform readiness: Tokens are OIDC-compliant, making it easy to reuse the same auth flow for web, mobile, or desktop clients.</li> <li>Ecosystem integration: Access to Google profile data (name, avatar, email) streamlines onboarding and personalization.</li> <li>Rollout: After application has been fully developed, can publish and the auth can work for all google accounts instead of just added test accounts.</li> </ul>"},{"location":"infrastructure/supply_chain_attack_audit/","title":"NPM Supply Chain Attack Audit","text":""},{"location":"infrastructure/supply_chain_attack_audit/#incident-1-chalk-debug-ecosystem-hijack","title":"Incident 1 \u2013 <code>chalk</code> / <code>debug</code> Ecosystem Hijack","text":"<ul> <li>Source: Aikido Security write-up.</li> <li>Root cause: Phishing email spoofing npm support (<code>support@npmjs.help</code>) convinced a maintainer to run malicious commands, handing attackers publish access to core packages such as <code>chalk</code> and <code>debug</code>.</li> <li>Attack chain: Newly published versions injected obfuscated browser-side malware that hooks <code>fetch</code>, <code>XMLHttpRequest</code>, and crypto wallet APIs to rewrite addresses and siphon funds.</li> <li>Blast radius: Eighteen core terminal/colour utility packages were trojanised; together they serve ~2B weekly downloads.</li> </ul>"},{"location":"infrastructure/supply_chain_attack_audit/#compromised-packages-and-versions","title":"Compromised packages and versions","text":"Package Malicious version(s) backslash 0.2.1 chalk-template 1.1.1 supports-hyperlinks 4.1.1 has-ansi 6.0.1 simple-swizzle 0.2.3 color-string 2.1.1 error-ex 1.3.3 color-name 2.0.1 is-arrayish 0.3.3 slice-ansi 7.1.1 color-convert 3.1.1 wrap-ansi 9.0.1 ansi-regex 6.2.1 supports-color 10.2.1 strip-ansi 7.1.1 chalk 5.6.1 debug 4.4.2 ansi-styles 6.2.2"},{"location":"infrastructure/supply_chain_attack_audit/#incident-2-ctrltinycolor-campaign","title":"Incident 2 \u2013 <code>@ctrl/tinycolor</code> Campaign","text":"<ul> <li>Source: Socket Research.</li> <li>Root cause: Malicious <code>bundle.js</code> added to <code>@ctrl/tinycolor</code> family. Attackers appear to have breached maintainer tooling, automating repacks via a script (<code>NpmModule.updatePackage</code>) that downloaded legitimate tarballs, injected malware, and republished dozens of packages.</li> <li>Attack chain: Installation executes <code>bundle.js</code>, which downloads TruffleHog, harvests tokens (<code>NPM_TOKEN</code>, <code>GITHUB_TOKEN</code>, cloud metadata), plants a GitHub Actions workflow that exfiltrates <code>${{ toJSON(secrets) }}</code> to <code>webhook.site</code>, and republishes hijacked packages for lateral spread.</li> <li>Blast radius: Initial wave hit 40+ packages across <code>@ctrl</code>, RxNT, Angular, and NativeScript ecosystems; subsequent tracking expanded to ~500 packages.</li> </ul>"},{"location":"infrastructure/supply_chain_attack_audit/#compromised-packages-and-versions-initial-wave","title":"Compromised packages and versions (initial wave)","text":"Package Malicious version(s) angulartics2 14.1.2 @ctrl/deluge 7.2.2 @ctrl/golang-template 1.4.3 @ctrl/magnet-link 4.0.4 @ctrl/ngx-codemirror 7.0.2 @ctrl/ngx-csv 6.0.2 @ctrl/ngx-emoji-mart 9.2.2 @ctrl/ngx-rightclick 4.0.2 @ctrl/qbittorrent 9.7.2 @ctrl/react-adsense 2.0.2 @ctrl/shared-torrent 6.3.2 @ctrl/tinycolor 4.1.1, 4.1.2 @ctrl/torrent-file 4.1.2 @ctrl/transmission 7.3.1 @ctrl/ts-base32 4.0.2 encounter-playground 0.0.5 json-rules-engine-simplified 0.2.1, 0.2.4 koa2-swagger-ui 5.11.1, 5.11.2 @nativescript-community/gesturehandler 2.0.35 @nativescript-community/sentry 4.6.43 @nativescript-community/text 1.6.13 @nativescript-community/ui-collectionview 6.0.6 @nativescript-community/ui-drawer 0.1.30 @nativescript-community/ui-image 4.5.6 @nativescript-community/ui-material-bottomsheet 7.2.72 @nativescript-community/ui-material-core 7.2.76 @nativescript-community/ui-material-core-tabs 7.2.76 ngx-color 10.0.2 ngx-toastr 19.0.2 ngx-trend 8.0.1 react-complaint-image 0.0.35 react-jsonschema-form-conditionals 0.3.21 react-jsonschema-form-extras 1.0.4 rxnt-authentication 0.0.6 rxnt-healthchecks-nestjs 1.0.5 rxnt-kue 1.0.7 swc-plugin-component-annotate 1.9.2 ts-gaussian 3.0.6 <p>Socket\u2019s follow-up investigation (16 Sep 2025) lists nearly 500 additional packages; review the linked article for the evolving catalogue.</p>"},{"location":"infrastructure/supply_chain_attack_audit/#campus-study-buddy-exposure-review","title":"Campus Study Buddy Exposure Review","text":""},{"location":"infrastructure/supply_chain_attack_audit/#automated-scan","title":"Automated scan","text":"<ul> <li>Executed <code>npm run audit:deps</code> (script wraps <code>npm audit --json</code>) on backend and frontend.</li> <li>Output stored at <code>reports/security/dependency-audit.json</code></li> <li>Result: 0 vulnerabilities at all severities; no audit failures.</li> </ul>"},{"location":"infrastructure/supply_chain_attack_audit/#manual-lockfile-inspection","title":"Manual lockfile inspection","text":"<ul> <li>Checked <code>backend/package-lock.json</code> and <code>frontend/package-lock.json</code> for the malicious versions above.</li> <li>Findings:</li> <li><code>chalk</code> is locked to 4.1.2 (frontend) and 4.1.2/4.0.0 ranges (backend) \u2013 all predating the compromised 5.6.1 release.</li> <li><code>debug</code> resolves to 4.4.1 (backend) and 4.3.x (frontend tooling); the compromised 4.4.2 release is absent.</li> <li>No entries for <code>@ctrl/*</code>, <code>ngx-*</code>, <code>rxnt-*</code>, or other packages listed in the tinycolor campaign.</li> <li>No <code>ansi-styles@6.2.2</code>, <code>supports-color@10.2.1</code>, or related trojanised dependencies; versions are older (5.x/7.x) and unaffected.</li> <li>Conclusion: Current locks are not impacted by the known malicious versions from either incident.</li> </ul>"},{"location":"infrastructure/supply_chain_attack_audit/#recommended-countermeasures","title":"Recommended Countermeasures","text":""},{"location":"infrastructure/supply_chain_attack_audit/#protect-against-upstream-package-compromise","title":"Protect against upstream package compromise","text":"<ul> <li>Enforce dependency pinning with lockfiles and checksum verification (npm\u2019s <code>package-lock.json</code> already checked into repo).</li> <li>Add malware-focused scanners (e.g., Aikido SafeChain, Socket, or npm\u2019s <code>--audit-level</code> gates) to CI/CD to detect malicious publish spikes.</li> <li>Subscribe to npm advisories and third-party threat feeds; automate pull request alerts when high-priority packages release unexpected majors/minors.</li> <li>Mirror critical dependencies internally or use artifact proxies (e.g., Artifactory) with allow-lists to slow propagation of poisoned releases.</li> </ul>"},{"location":"infrastructure/supply_chain_attack_audit/#protect-maintainers-and-pipelines-from-account-takeover","title":"Protect maintainers and pipelines from account takeover","text":"<ul> <li>Require hardware-based 2FA for npm maintainers and rotate tokens regularly; avoid responding to unsolicited \u201csupport\u201d emails.</li> <li>Store publish tokens in dedicated secret managers; restrict GitHub Actions workflows with OIDC and scoped deployment tokens.</li> <li>Enable provenance/sigstore checks (npm provenance, GitHub npm provenance) so only builds produced from trusted CI can publish.</li> <li>Monitor CI agents for outbound calls to metadata endpoints (<code>169.254.169.254</code>, <code>metadata.google.internal</code>) and block unauthorized egress destinations (e.g., <code>webhook.site</code>).</li> <li>Enforce <code>npm</code> provenance controls such as owner verification and package signing where available to prevent malicious repacks from unverified hosts.</li> </ul>"},{"location":"infrastructure/supply_chain_attack_audit/#project-specific-possible-next-steps","title":"Project-specific possible next steps","text":"<ol> <li>Integrate the <code>npm run audit:deps</code> script into CI with a failing threshold that balances signal-to-noise. </li> <li>Pilot a malware-focused scanner (Aikido SafeChain or Socket) on the repository to gain real-time telemetry for emerging campaigns.</li> <li>Document an incident playbook for dependency compromises, covering cache invalidation, forced reinstall, and credential rotation.</li> </ol>"},{"location":"infrastructure/supply_chain_attack_audit/#implemented-mitigations","title":"Implemented mitigations","text":"<ol> <li>Audit script created and run as a part of CI pipeline (see <code>dependency-audit.yml</code>). Alerting contributors on any future vulnerabilities.</li> </ol>"},{"location":"infrastructure/testing/","title":"Automated Testing Guide","text":"<p>This document explains how to run, write, and report on automated tests for Campus Study Buddy. It also describes the user feedback process for test reliability and coverage.</p>"},{"location":"infrastructure/testing/#how-to-run-tests","title":"How to Run Tests","text":"<ul> <li>Run all tests: <pre><code>npm run test:ci\n</code></pre></li> <li>Run tests in watch mode: <pre><code>npm run test\n</code></pre></li> <li>View coverage report:   After running tests, check the terminal output for coverage details. Coverage is measured for statements, branches, functions, and lines.</li> </ul>"},{"location":"infrastructure/testing/#how-to-write-new-tests","title":"How to Write New Tests","text":""},{"location":"infrastructure/testing/#test-files-live-next-to-componentspages","title":"Test files live next to components/pages","text":"<ul> <li>Example: <code>src/components/Sidebar.test.tsx</code>, <code>src/pages/Dashboard.test.tsx</code></li> </ul>"},{"location":"infrastructure/testing/#use-react-testing-library-and-vitest","title":"Use React Testing Library and Vitest","text":"<ul> <li>Import from <code>@testing-library/react</code> and <code>vitest</code></li> </ul>"},{"location":"infrastructure/testing/#mock-api-calls","title":"Mock API calls","text":"<ul> <li>All API endpoints are mocked in <code>src/setupTests.ts</code>.</li> </ul>"},{"location":"infrastructure/testing/#best-practices","title":"Best practices","text":"<ul> <li>Test loading, error, and success states</li> <li>Simulate user interactions with <code>fireEvent</code> or <code>userEvent</code></li> <li>Use <code>await screen.findBy...</code> for async UI</li> </ul>"},{"location":"infrastructure/testing/#how-to-report-issues-or-flakey-tests","title":"How to Report Issues or Flakey Tests","text":""},{"location":"infrastructure/testing/#if-a-test-fails-unexpectedly","title":"If a test fails unexpectedly","text":"<ol> <li>Check the error message and stack trace.</li> <li>Re-run the test to confirm if it is flakey.</li> <li>Document the issue in the project issue tracker (GitHub Issues or your team's system).</li> <li>Include:</li> <li>Test file and test name</li> <li>Error output</li> <li>Steps to reproduce</li> <li>Any recent code changes</li> </ol>"},{"location":"infrastructure/testing/#feedback-process","title":"Feedback process","text":"<ul> <li>All team members can report test issues.</li> <li>Assign issues to the responsible developer or QA lead.</li> <li>Track resolution and document fixes in the issue comments.</li> </ul>"},{"location":"infrastructure/testing/#how-to-use-automated-tests","title":"How to Use Automated Tests","text":""},{"location":"infrastructure/testing/#before-merging-code","title":"Before merging code","text":"<ul> <li>Run all tests and ensure 100% pass rate.</li> <li>Check coverage report for regressions.</li> </ul>"},{"location":"infrastructure/testing/#when-adding-new-features","title":"When adding new features","text":"<ul> <li>Add tests for new UI, API, and edge cases.</li> </ul>"},{"location":"infrastructure/testing/#when-refactoring","title":"When refactoring","text":"<ul> <li>Update or add tests to cover new logic.</li> </ul>"},{"location":"infrastructure/testing/#improving-coverage","title":"Improving Coverage","text":"<ul> <li>Use the coverage report to identify files/components with &lt;80% coverage.</li> <li>Add tests for:</li> <li>Alternate branches (if/else)</li> <li>Error states</li> <li>User interactions</li> <li>Empty states</li> </ul>"},{"location":"infrastructure/testing/#example-adding-a-test","title":"Example: Adding a Test","text":"<pre><code>import { render, screen } from '../test-utils';\nimport Sidebar from './Sidebar';\nimport { test, expect } from 'vitest';\n\ntest('Sidebar renders navigation links', async () =&gt; {\n  render(&lt;Sidebar /&gt;);\n  expect(await screen.findByText(/Dashboard/i)).toBeInTheDocument();\n});\n</code></pre> <p>For more help, contact the QA lead or check the README for additional testing resources.</p>"},{"location":"operations/","title":"Operations","text":""},{"location":"operations/#project-management-approach","title":"Project Management Approach","text":"<p>We use Scrum methodology: - Work in 2-week sprints - Track stories and tasks in GitHub Projects - Hold lightweight standups (async when needed) - Review progress at sprint review - Retrospective helps us improve continuously</p> <p>This approach fits a small, part-time student team because it provides structure without being overwhelming.</p> <p>Weekly scrum meeting due to time contraints</p>"},{"location":"operations/#project-tracking","title":"Project tracking:","text":"<p>https://github.com/users/GimbiyaSa/projects/2</p>"},{"location":"operations/#bug-tracking","title":"Bug tracking:","text":"<p>https://github.com/users/GimbiyaSa/projects/3</p>"},{"location":"operations/#project-meetings","title":"Project meetings:","text":"<p>https://github.com/GimbiyaSa/campus_study_buddy/tree/main/project%20meetings</p>"},{"location":"operations/roadmap/","title":"Roadmap","text":"<pre><code>gantt\n    dateFormat  YYYY-MM-DD\n    title Campus Study Buddy Frontend Roadmap (Revised to End of October 2025)\n\n    section Foundations\n    Setup project skeleton        :done,    des1, 2025-07-01, 2025-07-15\n    Auth &amp; routing                :done,    des2, 2025-07-15, 2025-07-30\n    API service layer             :done,    des3, 2025-07-25, 2025-08-05\n\n    section Core Features\n    Groups Page                   :done,    feat1, 2025-08-01, 2025-08-20\n    Sessions Page (create/view)   :done,    feat2, 2025-08-15, 2025-09-05\n    Dashboard summary cards       :done,    feat3, 2025-09-05, 2025-09-20\n    Courses Page                  :done,    feat4, 2025-09-15, 2025-09-30\n\n    section UX Enhancements\n    Profile &amp; preferences         :done,     enh1, 2025-09-30, 2025-10-10\n    Notifications &amp; reminders     :done,     enh2, 2025-10-10, 2025-10-20\n\n    section Future\n    Mobile optimization           :active,   fut1, 2025-10-13, 2025-10-20\n    Accessibility improvements    :active,   fut2, 2025-10-13, 2025-10-20\n    Search &amp; filtering upgrades   :active    fut3, 2025-10-13, 2025-10-20\n</code></pre>"},{"location":"operations/runbooks/","title":"Runbooks","text":""},{"location":"operations/runbooks/#api-down","title":"API down","text":"<ol> <li>Check <code>backend</code> logs</li> <li>Verify env vars and port 5000</li> <li>Restart process</li> </ol>"},{"location":"operations/runbooks/#frontend-build-fails","title":"Frontend build fails","text":"<ol> <li><code>npm ci</code></li> <li><code>npm run build</code></li> <li>Check Vite/Tailwind config</li> </ol>"},{"location":"operations/troubleshooting/","title":"Troubleshooting","text":"<ul> <li>CORS: ensure backend is running before frontend. Verify <code>REACT_APP_API_URL</code>.</li> <li>Port in use: free port 5000/5173.</li> <li>Type errors: <code>npm run build</code> in backend; fix TS errors reported.</li> </ul>"},{"location":"overview/","title":"Overview","text":"<p>Campus Study Buddy helps students organize learning, track progress, and connect with study partners.</p>"},{"location":"overview/#high-level-features","title":"High-level features","text":"<ul> <li>Dashboard with study buddy suggestions, activity, schedule</li> <li>Courses list + progress</li> <li>Notes &amp; reminders</li> <li>Study sessions / calendar</li> </ul>"},{"location":"overview/#tech-stack","title":"Tech stack","text":"<ul> <li>Frontend: React 18, TypeScript, Vite, TailwindCSS, Lucide-react icons</li> <li>Backend: Node.js, Express, TypeScript</li> <li>Infra/Services: GitHub Actions/Pages, Azure Cosmos DB, Azure Web PubSub, Azure Service Bus</li> </ul>"},{"location":"overview/#why-this-tech-stack","title":"Why This Tech Stack?","text":"<p>We chose React + TypeScript for the frontend because it allows us to write safe, reusable components. TailwindCSS accelerates UI prototyping. Vite gives us faster builds compared to older tools.</p> <p>On the backend, Express + Node.js are easy to learn and integrate well with frontend JavaScript skills. TypeScript helps us avoid bugs. Cosmos DB provides flexibility for storing varied data like courses, notes, and study sessions.</p> <p>Using Azure services (Service Bus, Web PubSub) allows us to add real-time features and async processing without reinventing the wheel.</p> <p>GitHub Actions + Pages handle our CI/CD and documentation hosting for free and automatically.</p>"},{"location":"swagger/docs/getting-started/","title":"Getting Started with Study Buddy Campus API","text":""},{"location":"swagger/docs/getting-started/#authentication","title":"Authentication","text":"<p>All API requests require authentication using JWT tokens:</p> <pre><code>curl -H \"Authorization: Bearer YOUR_JWT_TOKEN\" \\\n     https://api.studybuddy.com/api/users/me\n</code></pre>"},{"location":"swagger/docs/getting-started/#quick-start","title":"Quick Start","text":"<ol> <li>Get your API credentials from the developer dashboard</li> <li>Authenticate to receive a JWT token</li> <li>Make your first API call to get your user profile</li> <li>Explore the endpoints using the interactive documentation</li> </ol>"},{"location":"swagger/docs/getting-started/#base-urls","title":"Base URLs","text":"<ul> <li>Production: <code>https://api.studybuddy.com/api</code></li> <li>Staging: <code>https://staging-api.studybuddy.com/api</code></li> <li>Development: <code>http://localhost:3000/api</code></li> </ul>"},{"location":"swagger/docs/getting-started/#sdks-and-libraries","title":"SDKs and Libraries","text":"<p>Generate client libraries using the OpenAPI specification:</p> <pre><code># JavaScript/TypeScript\nnpx @openapitools/openapi-generator-cli generate \\\n  -i https://USERNAME.github.io/REPO_NAME/api-spec.yaml \\\n  -g typescript-fetch \\\n  -o ./client\n\n# Python\nopenapi-generator generate \\\n  -i https://USERNAME.github.io/REPO_NAME/api-spec.yaml \\\n  -g python \\\n  -o ./client\n</code></pre>"},{"location":"testing/","title":"\ud83d\udd10 API Testing &amp; Authentication","text":"<p>This page provides tools to help you test the Campus Study Buddy API endpoints. Since our API uses Google OAuth authentication, you'll need to get a valid token first.</p>"},{"location":"testing/#quick-start","title":"Quick Start","text":"<ol> <li>Open the Testing Tool - Interactive page to get Google tokens and test endpoints</li> <li>Get your Google ID token - Sign in with your Google account</li> <li>Test endpoints - Use the token to make authenticated requests</li> <li>Copy for external tools - Use the token in Postman, curl, or your applications</li> </ol>"},{"location":"testing/#testing-options","title":"Testing Options","text":""},{"location":"testing/#interactive-testing-page","title":"\ud83c\udf10 Interactive Testing Page","text":"<p>\u2192 Interactive Testing Tool - Configure your Google Client ID and test api endpoints</p> <p>Alternative Options: - Static Version - Requires manual Client ID configuration - Alternative View - Embedded iframe version</p> <p>Our interactive testing page allows you to: - Configure your Google OAuth Client ID directly in the browser - Sign in with Google to get ID tokens - Test endpoints directly in the browser - Copy tokens for use in external tools - View real-time API responses</p> <p>Note: The interactive tool requires a Google OAuth Client ID. See our setup guide for instructions.</p>"},{"location":"testing/#postman-collection","title":"\ud83d\udcee Postman Collection","text":"<p>We've prepared a Postman collection with pre-configured requests:</p> <ol> <li>Download Collection</li> <li>Import into Postman</li> <li>Set your <code>bearerToken</code> variable with a token from the testing page</li> <li>Start testing endpoints</li> </ol>"},{"location":"testing/#manual-testing","title":"\ud83d\udccb Manual Testing","text":"<p>For manual testing with curl or other tools, you'll need to include the Authorization header:</p> <pre><code>curl -H \"Authorization: Bearer YOUR_TOKEN_HERE\" \\\n     https://your-api-domain.com/api/v1/users/me\n</code></pre>"},{"location":"testing/#authentication-flow","title":"Authentication Flow","text":"<p>Our API uses Google ID tokens for authentication:</p> <ol> <li>User signs in with Google on the frontend</li> <li>Google returns an ID token (JWT)</li> <li>Client sends token in Authorization header: <code>Bearer YOUR_TOKEN</code></li> <li>API validates token with Google's servers</li> <li>API returns requested data if token is valid</li> </ol>"},{"location":"testing/#token-format","title":"Token Format","text":"<pre><code>Authorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjE2NzAyN...\n</code></pre>"},{"location":"testing/#available-endpoints","title":"Available Endpoints","text":""},{"location":"testing/#public-endpoints-no-authentication","title":"Public Endpoints (No Authentication)","text":"<ul> <li><code>GET /api/v1/health</code> - System health check</li> </ul>"},{"location":"testing/#protected-endpoints-authentication-required","title":"Protected Endpoints (Authentication Required)","text":"<ul> <li><code>GET /api/v1/users/me</code> - Current user profile</li> <li><code>GET /api/v1/modules</code> - Available modules</li> <li><code>GET /api/v1/groups</code> - Study groups</li> <li><code>GET /api/v1/sessions</code> - Study sessions</li> <li>And many more...</li> </ul> <p>\ud83d\udcd6 View Full API Documentation</p>"},{"location":"testing/#troubleshooting","title":"Troubleshooting","text":""},{"location":"testing/#access-token-required-error","title":"\"Access token required\" Error","text":"<p>This means you need to include a valid Google ID token in your request: - Make sure you're signed in on the testing page - Copy the full token (it's very long!) - Include it in the Authorization header</p>"},{"location":"testing/#token-expired-error","title":"Token Expired Error","text":"<p>Google ID tokens expire after about 1 hour: - Sign in again on the testing page to get a fresh token - For production apps, implement token refresh</p>"},{"location":"testing/#cors-issues","title":"CORS Issues","text":"<p>If testing from a different domain: - Use the testing page on this domain - Or configure CORS on your API server</p>"},{"location":"testing/#setup-for-developers","title":"Setup for Developers","text":"<p>If you're setting up your own testing environment, you'll need:</p> <ol> <li>Google OAuth Client ID - Register your app at Google Cloud Console</li> <li>Database Connection - Azure SQL Database connection string or individual DB credentials</li> <li>Environment Variables - Complete list of required and optional variables</li> <li>Azure Services (Optional) - Key Vault, Storage, Web PubSub for full functionality</li> </ol> <p>\ud83d\udcd6 Complete Environment Variables List</p>"},{"location":"testing/#quick-start-variables","title":"Quick Start Variables","text":"<p>At minimum, you need these for basic testing: <pre><code>GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com\nDATABASE_CONNECTION_STRING=your-azure-sql-connection-string\nNODE_ENV=development\nPORT=5000\n</code></pre></p> <p>\ud83d\udcd6 Detailed Setup Guide - Complete configuration instructions</p>"},{"location":"testing/#troubleshooting_1","title":"Troubleshooting","text":""},{"location":"testing/#error-400-origin_mismatch","title":"\"Error 400: origin_mismatch\"","text":"<p>This error occurs when your Google OAuth Client ID doesn't allow requests from the current domain.</p> <p>Quick Fix: 1. Go to Google Cloud Console \u2192 \"APIs &amp; Services\" \u2192 \"Credentials\" 2. Edit your OAuth 2.0 Client ID 3. Add <code>https://gimbiyasa.github.io</code> to \"Authorized JavaScript origins\" 4. Save and wait a few minutes</p>"},{"location":"testing/#access-token-required-error_1","title":"\"Access token required\" Error","text":"<p>This means you need to include a valid Google ID token in your request: - Make sure you're signed in on the testing page - Copy the full token (it's very long!) - Include it in the Authorization header</p>"},{"location":"testing/#token-expired-error_1","title":"Token Expired Error","text":"<p>Google ID tokens expire after about 1 hour: - Sign in again on the testing page to get a fresh token - For production apps, implement token refresh</p> <p>\ud83d\udcd6 Complete Troubleshooting Guide</p>"},{"location":"testing/#security-notes","title":"Security Notes","text":"<p>\u26a0\ufe0f Important Security Reminders: - Never commit tokens to version control - Tokens expire after ~1 hour - Only use tokens for testing - Don't share tokens with others - Use HTTPS in production</p>"},{"location":"testing/#related-documentation","title":"Related Documentation","text":"<ul> <li>Backend API Reference - Complete endpoint documentation</li> <li>Swagger UI - Interactive API explorer</li> <li>Authentication Guide - How authentication works</li> <li>Setup Guide - Detailed testing setup instructions</li> <li>Environment Variables Reference - Complete variable documentation</li> </ul>"},{"location":"testing/environment-variables/","title":"Environment Variables Reference","text":"<p>This document provides a complete reference for all environment variables used by the Campus Study Buddy backend.</p>"},{"location":"testing/environment-variables/#essential-variables","title":"Essential Variables","text":"<p>These variables are required for the application to function:</p>"},{"location":"testing/environment-variables/#authentication","title":"Authentication","text":"Variable Required Description Example <code>GOOGLE_CLIENT_ID</code> \u2705 Yes Google OAuth 2.0 Client ID for authentication <code>123456789-abc.apps.googleusercontent.com</code>"},{"location":"testing/environment-variables/#database","title":"Database","text":"Variable Required Description Example <code>DATABASE_CONNECTION_STRING</code> \u2705 Yes Complete Azure SQL connection string (preferred) <code>Server=tcp:server.database.windows.net,1433;Initial Catalog=study_buddy_db;Persist Security Info=False;User ID=username;Password=password;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;</code> <p>OR (if not using connection string):</p> Variable Required Description Example <code>DB_SERVER</code> \u2705 Yes* Database server hostname <code>your-server.database.windows.net</code> <code>DB_NAME</code> \u2705 Yes* Database name <code>study_buddy_db</code> <code>DB_USER</code> \u2705 Yes* Database username <code>your-username</code> <code>DB_PASSWORD</code> \u2705 Yes* Database password <code>your-password</code> <p>*Required only if <code>DATABASE_CONNECTION_STRING</code> is not provided.</p>"},{"location":"testing/environment-variables/#application","title":"Application","text":"Variable Required Description Example <code>NODE_ENV</code> \u26a0\ufe0f Recommended Application environment <code>development</code>, <code>production</code>, <code>test</code> <code>PORT</code> \u26a0\ufe0f Recommended Port for the server to listen on <code>5000</code> (default)"},{"location":"testing/environment-variables/#azure-services-optional","title":"Azure Services (Optional)","text":"<p>These variables enable additional Azure functionality:</p>"},{"location":"testing/environment-variables/#key-vault","title":"Key Vault","text":"Variable Required Description Example <code>KEY_VAULT_NAME</code> \ud83d\udd39 Optional Azure Key Vault name for secure secret management <code>your-keyvault-name</code>"},{"location":"testing/environment-variables/#storage","title":"Storage","text":"Variable Required Description Example <code>AZURE_STORAGE_ACCOUNT_NAME</code> \ud83d\udd39 Optional Azure Storage account for file operations <code>yourstorageaccount</code> <code>AZURE_STORAGE_ACCOUNT_KEY</code> \ud83d\udd39 Optional Azure Storage account key <code>your-storage-key</code>"},{"location":"testing/environment-variables/#real-time-communication","title":"Real-time Communication","text":"Variable Required Description Example <code>WEB_PUBSUB_CONNECTION_STRING</code> \ud83d\udd39 Optional Azure Web PubSub for real-time chat <code>Endpoint=https://your-pubsub.webpubsub.azure.com;AccessKey=...</code> <code>WEB_PUBSUB_HUB</code> \ud83d\udd39 Optional Web PubSub hub name <code>chat-hub</code> (default)"},{"location":"testing/environment-variables/#background-processing","title":"Background Processing","text":"Variable Required Description Example <code>SERVICE_BUS_CONNECTION_STRING</code> \ud83d\udd39 Optional Azure Service Bus for background tasks <code>Endpoint=sb://your-servicebus.servicebus.windows.net/;SharedAccessKeyName=...</code>"},{"location":"testing/environment-variables/#deployment-variables","title":"Deployment Variables","text":"<p>These variables are used in production Azure deployments:</p>"},{"location":"testing/environment-variables/#azure-identity","title":"Azure Identity","text":"Variable Required Description Example <code>AZURE_CLIENT_ID</code> \ud83d\udd39 Optional Managed Identity client ID <code>12345678-1234-1234-1234-123456789012</code> <code>CONTAINER_APP_NAME</code> \ud83d\udd39 Optional Azure Container App name <code>campus-study-buddy-api</code> <code>WEBSITE_SITE_NAME</code> \ud83d\udd39 Optional Azure App Service name <code>campus-study-buddy-api</code> <code>AZURE_FUNCTIONS_ENVIRONMENT</code> \ud83d\udd39 Optional Azure Functions environment <code>production</code>"},{"location":"testing/environment-variables/#cors-configuration","title":"CORS Configuration","text":"Variable Required Description Example <code>FRONTEND_URL</code> \u26a0\ufe0f Recommended Frontend application URL <code>https://your-frontend.com</code> <code>ALLOWED_ORIGINS</code> \ud83d\udd39 Optional Additional allowed CORS origins (comma-separated) <code>https://domain1.com,https://domain2.com</code>"},{"location":"testing/environment-variables/#feature-configuration","title":"Feature Configuration","text":""},{"location":"testing/environment-variables/#default-module-settings","title":"Default Module Settings","text":"Variable Required Description Example <code>DEFAULT_MODULE_ID</code> \ud83d\udd39 Optional Default module ID for groups <code>1</code> <code>DEFAULT_MODULE_CODE</code> \ud83d\udd39 Optional Default module code <code>GEN-DEFAULT</code> <code>DEFAULT_MODULE_NAME</code> \ud83d\udd39 Optional Default module name <code>General</code> <code>DEFAULT_MODULE_UNIVERSITY</code> \ud83d\udd39 Optional Default university name <code>Your University</code>"},{"location":"testing/environment-variables/#development-vs-production","title":"Development vs Production","text":""},{"location":"testing/environment-variables/#development-setup-minimal","title":"Development Setup (Minimal)","text":"<pre><code># Required for local development\nGOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com\nDATABASE_CONNECTION_STRING=your-local-or-dev-database-connection\nNODE_ENV=development\nPORT=5000\n\n# Optional for full functionality\nFRONTEND_URL=http://localhost:3000\n</code></pre>"},{"location":"testing/environment-variables/#production-setup-full","title":"Production Setup (Full)","text":"<pre><code># Authentication &amp; Database (Required)\nGOOGLE_CLIENT_ID=your-production-google-client-id.apps.googleusercontent.com\nDATABASE_CONNECTION_STRING=your-production-database-connection\n\n# Application\nNODE_ENV=production\nPORT=80\n\n# Azure Services\nKEY_VAULT_NAME=your-production-keyvault\nAZURE_STORAGE_ACCOUNT_NAME=your-production-storage\nWEB_PUBSUB_CONNECTION_STRING=your-production-webpubsub-connection\nSERVICE_BUS_CONNECTION_STRING=your-production-servicebus-connection\n\n# Deployment\nAZURE_CLIENT_ID=your-managed-identity-client-id\nWEBSITE_SITE_NAME=your-app-service-name\n\n# CORS\nFRONTEND_URL=https://your-production-frontend.com\nALLOWED_ORIGINS=https://your-production-frontend.com,https://your-admin-panel.com\n</code></pre>"},{"location":"testing/environment-variables/#security-notes","title":"Security Notes","text":"<p>\u26a0\ufe0f Important Security Considerations:</p> <ul> <li>Never commit environment variables to version control</li> <li>Use different values for development and production</li> <li>Store sensitive values in Azure Key Vault in production</li> <li>Rotate keys and passwords regularly</li> <li>Use managed identities in Azure when possible</li> <li>Restrict CORS origins to only necessary domains</li> </ul>"},{"location":"testing/environment-variables/#validation","title":"Validation","text":"<p>The application will log warnings for missing optional variables and fail to start if required variables are missing. Check your application logs for specific error messages about missing configuration.</p>"},{"location":"testing/environment-variables/#related-documentation","title":"Related Documentation","text":"<ul> <li>Testing Setup Guide - How to configure for API testing</li> <li>Google OAuth Setup - Getting Google Client ID</li> <li>Azure Services Documentation - Azure service configuration</li> </ul>"},{"location":"testing/setup/","title":"Campus Study Buddy - Testing Environment Setup","text":"<p>This guide helps you set up a complete testing environment for the Campus Study Buddy API.</p>"},{"location":"testing/setup/#required-environment-variables","title":"Required Environment Variables","text":"<p>Before testing, make sure your backend has these environment variables set:</p>"},{"location":"testing/setup/#essential-variables-required","title":"Essential Variables (Required)","text":"<pre><code># Google OAuth Configuration (REQUIRED for authentication)\nGOOGLE_CLIENT_ID=your-google-oauth-client-id.apps.googleusercontent.com\n\n# Database Configuration (REQUIRED - use one of these methods)\n# Method 1: Connection String (Recommended)\nDATABASE_CONNECTION_STRING=your-azure-sql-connection-string\n\n# Method 2: Individual Database Components (Alternative)\nDB_SERVER=your-sql-server.database.windows.net\nDB_NAME=study_buddy_db\nDB_USER=your-username\nDB_PASSWORD=your-password\n\n# Application Configuration\nNODE_ENV=development\nPORT=5000\n</code></pre>"},{"location":"testing/setup/#azure-services-optional-but-recommended","title":"Azure Services (Optional but recommended)","text":"<pre><code># Azure Key Vault (for secure secret management)\nKEY_VAULT_NAME=your-keyvault-name\n\n# Azure Storage (for file uploads/downloads)\nAZURE_STORAGE_ACCOUNT_NAME=your-storage-account\nAZURE_STORAGE_ACCOUNT_KEY=your-storage-key\n\n# Azure Web PubSub (for real-time chat)\nWEB_PUBSUB_CONNECTION_STRING=your-webpubsub-connection-string\nWEB_PUBSUB_HUB=chat-hub\n\n# Azure Service Bus (for background processing)\nSERVICE_BUS_CONNECTION_STRING=your-servicebus-connection-string\n</code></pre>"},{"location":"testing/setup/#deployment-variables-production","title":"Deployment Variables (Production)","text":"<pre><code># Azure Deployment Identifiers\nAZURE_CLIENT_ID=your-managed-identity-client-id\nCONTAINER_APP_NAME=your-container-app-name\nWEBSITE_SITE_NAME=your-app-service-name\nAZURE_FUNCTIONS_ENVIRONMENT=production\n\n# CORS Configuration\nFRONTEND_URL=https://your-frontend-domain.com\nALLOWED_ORIGINS=https://domain1.com,https://domain2.com\n</code></pre>"},{"location":"testing/setup/#default-module-configuration-optional","title":"Default Module Configuration (Optional)","text":"<pre><code># Default module settings for groups\nDEFAULT_MODULE_ID=1\nDEFAULT_MODULE_CODE=GEN-DEFAULT\nDEFAULT_MODULE_NAME=General\nDEFAULT_MODULE_UNIVERSITY=Your University\n</code></pre>"},{"location":"testing/setup/#how-to-get-google-oauth-client-id","title":"How to Get Google OAuth Client ID","text":"<ol> <li>Go to Google Cloud Console: https://console.cloud.google.com/</li> <li>Create or select a project</li> <li>Enable Google+ API:</li> <li>Go to \"APIs &amp; Services\" &gt; \"Library\"</li> <li>Search for \"Google+ API\" and enable it</li> <li>Create OAuth 2.0 credentials:</li> <li>Go to \"APIs &amp; Services\" &gt; \"Credentials\"</li> <li>Click \"Create Credentials\" &gt; \"OAuth 2.0 Client IDs\"</li> <li>Choose \"Web application\"</li> <li>\u26a0\ufe0f CRITICAL: Add authorized JavaScript origins:<ul> <li><code>https://gimbiyasa.github.io</code> (for GitHub Pages testing)</li> <li><code>http://localhost:3000</code> (for frontend development)</li> <li><code>http://localhost:5000</code> (for backend testing)</li> <li><code>http://127.0.0.1:3000</code> (alternative localhost)</li> <li><code>http://127.0.0.1:5000</code> (alternative localhost)</li> </ul> </li> <li> <p>Add authorized redirect URIs:</p> <ul> <li><code>http://localhost:3000/auth/callback</code></li> <li><code>https://gimbiyasa.github.io/campus_study_buddy/testing/</code></li> </ul> </li> <li> <p>Copy the Client ID and add it to your .env file</p> </li> </ol>"},{"location":"testing/setup/#fixing-origin_mismatch-error","title":"Fixing \"origin_mismatch\" Error","text":"<p>If you get an error like \"You can't sign in to this app because it doesn't comply with Google's OAuth 2.0 policy\" or \"Error 400: origin_mismatch\", it means your current domain isn't authorized. </p> <p>To fix this:</p> <ol> <li>Go to Google Cloud Console</li> <li>Navigate to \"APIs &amp; Services\" &gt; \"Credentials\"</li> <li>Find your OAuth 2.0 Client ID and click the edit button (pencil icon)</li> <li>In the \"Authorized JavaScript origins\" section, add:</li> <li><code>https://gimbiyasa.github.io</code> (the exact domain where your testing page is hosted)</li> <li>Click \"Save\"</li> <li>Wait a few minutes for the changes to propagate</li> <li>Try signing in again</li> </ol>"},{"location":"testing/setup/#important-notes","title":"Important Notes:","text":"<ul> <li>The origin must match exactly (including https/http and port numbers)</li> <li>Changes may take a few minutes to take effect</li> <li>For local testing, you may need both <code>localhost</code> and <code>127.0.0.1</code> entries</li> </ul>"},{"location":"testing/setup/#testing-methods","title":"Testing Methods","text":""},{"location":"testing/setup/#method-1-html-test-page","title":"Method 1: HTML Test Page","text":"<ol> <li>Update <code>api-testing.html</code> with your Google Client ID</li> <li>Open the file in a browser</li> <li>Sign in with Google</li> <li>Copy the token for API testing</li> </ol>"},{"location":"testing/setup/#method-2-using-gcloud-cli-for-developers","title":"Method 2: Using gcloud CLI (For developers)","text":"<pre><code># Install gcloud CLI if not already installed\n# https://cloud.google.com/sdk/docs/install\n\n# Authenticate\ngcloud auth login\n\n# Get ID token\ngcloud auth print-identity-token\n</code></pre>"},{"location":"testing/setup/#method-3-postman-collection","title":"Method 3: Postman Collection","text":"<ol> <li>Import the provided Postman collection</li> <li>Set the <code>google_id_token</code> variable with a token from Method 1 or 2</li> <li>Test the endpoints</li> </ol>"},{"location":"testing/setup/#api-testing-examples","title":"API Testing Examples","text":""},{"location":"testing/setup/#with-curl","title":"With curl:","text":"<pre><code># Health check (no auth required)\ncurl http://localhost:5000/api/v1/health\n\n# User profile (requires auth)\ncurl -H \"Authorization: Bearer YOUR_GOOGLE_ID_TOKEN\" \\\n     http://localhost:5000/api/v1/users/me\n\n# Get modules (requires auth)\ncurl -H \"Authorization: Bearer YOUR_GOOGLE_ID_TOKEN\" \\\n     http://localhost:5000/api/v1/modules?limit=5\n</code></pre>"},{"location":"testing/setup/#with-javascript","title":"With JavaScript:","text":"<pre><code>const token = 'YOUR_GOOGLE_ID_TOKEN';\n\n// Test user profile\nfetch('http://localhost:5000/api/v1/users/me', {\n  headers: {\n    'Authorization': `Bearer ${token}`,\n    'Content-Type': 'application/json'\n  }\n})\n.then(response =&gt; response.json())\n.then(data =&gt; console.log(data));\n</code></pre>"},{"location":"testing/setup/#troubleshooting","title":"Troubleshooting","text":""},{"location":"testing/setup/#common-issues","title":"Common Issues:","text":"<ol> <li>\"Access token required\":</li> <li>Make sure you're including the Authorization header</li> <li>Verify the token is a valid Google ID token</li> <li> <p>Check that GOOGLE_CLIENT_ID is set in your backend</p> </li> <li> <p>CORS errors:</p> </li> <li>Make sure your backend allows requests from your testing domain</li> <li> <p>Check the CORS configuration in your Express app</p> </li> <li> <p>\"Invalid token\":</p> </li> <li>Google ID tokens expire (usually after 1 hour)</li> <li>Get a fresh token from the test page</li> <li> <p>Verify the token is for the correct Google Client ID</p> </li> <li> <p>Database connection errors:</p> </li> <li>Check DATABASE_CONNECTION_STRING is correct</li> <li>Ensure Azure SQL database is accessible</li> <li>Verify firewall rules allow connections</li> </ol>"},{"location":"testing/setup/#security-notes","title":"Security Notes","text":"<ul> <li>Never commit real tokens to version control</li> <li>ID tokens expire after ~1 hour - get fresh ones for testing</li> <li>Use test/development Google projects for API testing</li> <li>Restrict OAuth client to specific domains in production</li> </ul>"},{"location":"testing/setup/#quick-links","title":"Quick Links","text":"<ul> <li>Interactive Testing Tool - Get tokens and test endpoints</li> <li>API Documentation - Complete endpoint reference</li> <li>Swagger UI - Interactive API explorer</li> <li>Postman Collection - Download collection</li> </ul>"},{"location":"testing/tool/","title":"\ud83d\udd10 API Testing Tool","text":""},{"location":"testing/tool/#alternative-access","title":"Alternative Access","text":"<p>If the embedded tool above doesn't work properly, you can:</p> <ol> <li>Open in new tab - Direct link to the testing tool</li> <li>Download locally - Right-click and save for local use</li> <li>Use the setup guide - For manual authentication setup</li> </ol>"},{"location":"testing/tool/#what-this-tool-does","title":"What This Tool Does","text":"<ul> <li>Sign in with Google to get authentication tokens</li> <li>Test API endpoints directly in your browser  </li> <li>Copy tokens for use in Postman, curl, or other tools</li> <li>View API responses in real-time</li> </ul>"},{"location":"testing/tool/#requirements","title":"Requirements","text":"<ul> <li>Google OAuth Client ID configured in the tool</li> <li>Your backend API server running</li> <li>Modern web browser with JavaScript enabled</li> </ul> <p>\u2190 Back to Testing Overview</p>"}]}